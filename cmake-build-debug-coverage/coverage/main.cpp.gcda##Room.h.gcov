        -:    0:Source:C:/Users/04024/CLionProjects/PSS_as/Room.h
        -:    0:Graph:C:\Users\04024\CLionProjects\PSS_as\cmake-build-debug-coverage\CMakeFiles\PSS_as.dir\main.cpp.gcno
        -:    0:Data:C:\Users\04024\CLionProjects\PSS_as\cmake-build-debug-coverage\CMakeFiles\PSS_as.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by 04024 on 05.03.2021.
        -:    3://
        -:    4:
        -:    5:#ifndef PSS_AS_ROOM_H
        -:    6:#define PSS_AS_ROOM_H
        -:    7:
        -:    8:
        -:    9:#include "Users/Person.h"
        -:   10:
        -:   11:class Room {
        -:   12:private:
        -:   13:    char* name;
        -:   14:    unsigned int standardAccess = 1;
        -:   15:    int specialAccessedUsers_len = 0,specialAccessedUsers_count=1;
        -:   16:    unsigned int* specialAccessedUsers = new unsigned int[1];
    #####:   17:    void resizeAccess(){
    #####:   18:        unsigned int* newSpecialAccessedUsers = new unsigned int[specialAccessedUsers_count*2];
    %%%%%:   18-block  0
    %%%%%:   18-block  1
    %%%%%:   18-block  2
    %%%%%:   18-block  3
    #####:   19:        for(int i=0;i<specialAccessedUsers_count;i++){
    %%%%%:   19-block  0
    #####:   20:            newSpecialAccessedUsers[i] = specialAccessedUsers[i];
    %%%%%:   20-block  0
        -:   21:        }
    #####:   22:        specialAccessedUsers_count<<=1;
    #####:   23:        specialAccessedUsers = newSpecialAccessedUsers;
    #####:   24:    }
        -:   25:public:
        1:   26:    Room(){};
        1:   26-block  0
    #####:   27:    Room(char* Name,int Room_id,unsigned int StandardAccess) {
    %%%%%:   27-block  0
    #####:   28:        this->name = Name;
    #####:   29:        this->standardAccess = StandardAccess;
    #####:   30:        this->room_id = Room_id;
    #####:   31:    }
    #####:   32:    void addInAccessed(unsigned int id){
    #####:   33:        for(int i=0;i<specialAccessedUsers_len;i++){
    %%%%%:   33-block  0
    %%%%%:   33-block  1
    %%%%%:   33-block  2
    #####:   34:            if(specialAccessedUsers[i] == id){
    %%%%%:   34-block  0
    #####:   35:                return;
    %%%%%:   35-block  0
        -:   36:            }
        -:   37:        }
    #####:   38:        if(specialAccessedUsers_len + 1 == specialAccessedUsers_count){
    %%%%%:   38-block  0
    #####:   39:            resizeAccess();
    %%%%%:   39-block  0
        -:   40:        }
    #####:   41:        specialAccessedUsers[specialAccessedUsers_len] = id;
    #####:   42:        specialAccessedUsers_len++;
    %%%%%:   42-block  0
        -:   43:    }
    #####:   44:    void removeAccess(unsigned int id){
    #####:   45:        unsigned int* newSpecialAccessedUsers = new unsigned int[specialAccessedUsers_count];
    %%%%%:   45-block  0
    %%%%%:   45-block  1
    %%%%%:   45-block  2
    %%%%%:   45-block  3
    #####:   46:        for(int i=0,j = 0;i<specialAccessedUsers_len;i++){
    %%%%%:   46-block  0
    %%%%%:   46-block  1
    #####:   47:            if(specialAccessedUsers[i] != id){
    %%%%%:   47-block  0
    #####:   48:                newSpecialAccessedUsers[i-j] = specialAccessedUsers[i];
    %%%%%:   48-block  0
        -:   49:            }else{
    #####:   50:                j++;
    %%%%%:   50-block  0
        -:   51:            }
        -:   52:        }
    #####:   53:        specialAccessedUsers = newSpecialAccessedUsers;
    #####:   54:        specialAccessedUsers_len --;
    #####:   55:    }
        -:   56:
        -:   57:    int room_id;
        -:   58:    bool canEnter(const Person person);
        -:   59:};
        -:   60:
        -:   61:
        -:   62:#endif //PSS_AS_ROOM_H
